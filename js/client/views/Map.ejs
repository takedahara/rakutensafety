<!DOCTYPE html>
<html>
  <head>
    <title>Custom Marker with Accuracy Circle</title>
    <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyA_dorTpJmEWFa1FS7uvbxRWN9wluuvNlA&callback=initMap&libraries=maps&v=beta">
    </script>
    <style>
      /* Always set the map height explicitly to define the size of the div
       * element that contains the map. */
      #map {
        height: 100%;
      }

      /* Optional: Makes the sample page fill the window. */
      html,
      body {
        height: 100%;
        margin: 0;
        padding: 0;
      }
    </style>
    <script>
      let map;

      function initMap() {
        getLocation();
      }

      function initializeMap(latitude, longitude, accuracy) {
        const currentLocation = new google.maps.LatLng(latitude, longitude);

        map = new google.maps.Map(document.getElementById('map'), {
          center: currentLocation,
          zoom: 15,
          mapId: 'DEMO_MAP_ID'
        });

        const marker = new google.maps.Marker({
          position: currentLocation,
          map: map,
          title: "Current Location",
          icon: {
            url: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'
          }
        });

        const accuracyCircle = new google.maps.Circle({
          map: map,
          radius: accuracy,
          center: currentLocation,
          fillColor: '#4299FF',
          fillOpacity: 0.2,
          strokeColor: '#4299FF',
          strokeOpacity: 0.4,
          strokeWeight: 2
        });

        sendLocationToServer(latitude, longitude);
      }

      function sendLocationToServer(latitude, longitude) {
        fetch('/CurrentLocation', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            latitude: latitude,
            longitude: longitude
          })
        })
        .then(response => response.text())
        .then(data => {
          console.log(data);
        })
        .catch(error => {
          console.error('Error:', error);
        });
      }

      function getLocation() {
        if ("geolocation" in navigator) {
          navigator.geolocation.getCurrentPosition(position => {
            const latitude = position.coords.latitude;
            const longitude = position.coords.longitude;
            const accuracy = position.coords.accuracy;

            initializeMap(latitude, longitude, accuracy);
          }, showError);
        } else {
          alert('Geolocation is not supported by this browser.');
        }
      }

      function showError(error) {
        switch(error.code) {
          case error.PERMISSION_DENIED:
            alert('User denied the request for Geolocation.');
            break;
          case error.POSITION_UNAVAILABLE:
            alert('Location information is unavailable.');
            break;
          case error.TIMEOUT:
            alert('The request to get user location timed out.');
            break;
          case error.UNKNOWN_ERROR:
            alert('An unknown error occurred.');
            break;
        }
      }
    </script>
  </head>
  <body>
    <div id="map" style="height: 100%;"></div>
  </body>
</html>
